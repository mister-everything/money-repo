{
  "id": "37d56362-fb1f-49ad-b9da-265451a91553",
  "prevId": "4184b56d-d63b-4559-b336-628e796545fb",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "solves.ai_provider_prices": {
      "name": "ai_provider_prices",
      "schema": "solves",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "model": {
          "name": "model",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "model_type": {
          "name": "model_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "input_token_price": {
          "name": "input_token_price",
          "type": "numeric(12, 8)",
          "primaryKey": false,
          "notNull": true
        },
        "output_token_price": {
          "name": "output_token_price",
          "type": "numeric(12, 8)",
          "primaryKey": false,
          "notNull": true
        },
        "markup_rate": {
          "name": "markup_rate",
          "type": "numeric(6, 3)",
          "primaryKey": false,
          "notNull": true,
          "default": "'1.60'"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "ai_provider_prices_provider_model_idx": {
          "name": "ai_provider_prices_provider_model_idx",
          "columns": [
            {
              "expression": "provider",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "model",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "solves.credit_ledger": {
      "name": "credit_ledger",
      "schema": "solves",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "wallet_id": {
          "name": "wallet_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "kind": {
          "name": "kind",
          "type": "credit_txn_kind",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "delta": {
          "name": "delta",
          "type": "numeric(18, 6)",
          "primaryKey": false,
          "notNull": true
        },
        "running_balance": {
          "name": "running_balance",
          "type": "numeric(18, 6)",
          "primaryKey": false,
          "notNull": true
        },
        "idempotency_key": {
          "name": "idempotency_key",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "reason": {
          "name": "reason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "credit_ledger_wallet_created_idx": {
          "name": "credit_ledger_wallet_created_idx",
          "columns": [
            {
              "expression": "wallet_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "credit_ledger_wallet_idemp_uniq": {
          "name": "credit_ledger_wallet_idemp_uniq",
          "columns": [
            {
              "expression": "wallet_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "idempotency_key",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "credit_ledger_wallet_id_credit_wallet_id_fk": {
          "name": "credit_ledger_wallet_id_credit_wallet_id_fk",
          "tableFrom": "credit_ledger",
          "tableTo": "credit_wallet",
          "schemaTo": "solves",
          "columnsFrom": [
            "wallet_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "solves.credit_wallet": {
      "name": "credit_wallet",
      "schema": "solves",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "balance": {
          "name": "balance",
          "type": "numeric(18, 6)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "version": {
          "name": "version",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "credit_wallet_user_unique": {
          "name": "credit_wallet_user_unique",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "credit_wallet_user_id_user_id_fk": {
          "name": "credit_wallet_user_id_user_id_fk",
          "tableFrom": "credit_wallet",
          "tableTo": "user",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "balance_non_negative": {
          "name": "balance_non_negative",
          "value": "\"solves\".\"credit_wallet\".\"balance\" >= 0"
        }
      },
      "isRLSEnabled": false
    },
    "solves.idempotency_keys": {
      "name": "idempotency_keys",
      "schema": "solves",
      "columns": {
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "resource_type": {
          "name": "resource_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "resource_id": {
          "name": "resource_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "response": {
          "name": "response",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "idempotency_expires_at_idx": {
          "name": "idempotency_expires_at_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "idempotency_keys_user_id_user_id_fk": {
          "name": "idempotency_keys_user_id_user_id_fk",
          "tableFrom": "idempotency_keys",
          "tableTo": "user",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "solves.invoices": {
      "name": "invoices",
      "schema": "solves",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "wallet_id": {
          "name": "wallet_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "amount_usd": {
          "name": "amount_usd",
          "type": "numeric(18, 6)",
          "primaryKey": false,
          "notNull": true
        },
        "purchased_credits": {
          "name": "purchased_credits",
          "type": "numeric(18, 6)",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "invoice_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "external_ref": {
          "name": "external_ref",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "external_order_id": {
          "name": "external_order_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "paid_at": {
          "name": "paid_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "invoices_user_created_idx": {
          "name": "invoices_user_created_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_external_ref_idx": {
          "name": "invoices_external_ref_idx",
          "columns": [
            {
              "expression": "external_ref",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invoices_user_id_user_id_fk": {
          "name": "invoices_user_id_user_id_fk",
          "tableFrom": "invoices",
          "tableTo": "user",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "invoices_wallet_id_credit_wallet_id_fk": {
          "name": "invoices_wallet_id_credit_wallet_id_fk",
          "tableFrom": "invoices",
          "tableTo": "credit_wallet",
          "schemaTo": "solves",
          "columnsFrom": [
            "wallet_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "solves.usage_events": {
      "name": "usage_events",
      "schema": "solves",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "wallet_id": {
          "name": "wallet_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "price_id": {
          "name": "price_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "model": {
          "name": "model",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "input_tokens": {
          "name": "input_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "output_tokens": {
          "name": "output_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "cached_tokens": {
          "name": "cached_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "calls": {
          "name": "calls",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "vendor_cost_usd": {
          "name": "vendor_cost_usd",
          "type": "numeric(18, 6)",
          "primaryKey": false,
          "notNull": true
        },
        "billable_credits": {
          "name": "billable_credits",
          "type": "numeric(18, 6)",
          "primaryKey": false,
          "notNull": true
        },
        "request_id": {
          "name": "request_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "usage_events_wallet_created_idx": {
          "name": "usage_events_wallet_created_idx",
          "columns": [
            {
              "expression": "wallet_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "usage_events_user_created_idx": {
          "name": "usage_events_user_created_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "usage_events_wallet_idemp_uniq": {
          "name": "usage_events_wallet_idemp_uniq",
          "columns": [
            {
              "expression": "wallet_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "request_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "usage_events_user_id_user_id_fk": {
          "name": "usage_events_user_id_user_id_fk",
          "tableFrom": "usage_events",
          "tableTo": "user",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "usage_events_wallet_id_credit_wallet_id_fk": {
          "name": "usage_events_wallet_id_credit_wallet_id_fk",
          "tableFrom": "usage_events",
          "tableTo": "credit_wallet",
          "schemaTo": "solves",
          "columnsFrom": [
            "wallet_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "usage_events_price_id_ai_provider_prices_id_fk": {
          "name": "usage_events_price_id_ai_provider_prices_id_fk",
          "tableFrom": "usage_events",
          "tableTo": "ai_provider_prices",
          "schemaTo": "solves",
          "columnsFrom": [
            "price_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "solves.prob_block_answer_submits": {
      "name": "prob_block_answer_submits",
      "schema": "solves",
      "columns": {
        "block_id": {
          "name": "block_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "submit_id": {
          "name": "submit_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "answer": {
          "name": "answer",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "is_correct": {
          "name": "is_correct",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "prob_block_answer_submits_block_id_prob_blocks_id_fk": {
          "name": "prob_block_answer_submits_block_id_prob_blocks_id_fk",
          "tableFrom": "prob_block_answer_submits",
          "tableTo": "prob_blocks",
          "schemaTo": "solves",
          "columnsFrom": [
            "block_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "prob_block_answer_submits_submit_id_prob_book_submits_id_fk": {
          "name": "prob_block_answer_submits_submit_id_prob_book_submits_id_fk",
          "tableFrom": "prob_block_answer_submits",
          "tableTo": "prob_book_submits",
          "schemaTo": "solves",
          "columnsFrom": [
            "submit_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "prob_block_answer_submits_block_id_submit_id_pk": {
          "name": "prob_block_answer_submits_block_id_submit_id_pk",
          "columns": [
            "block_id",
            "submit_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "solves.prob_blocks": {
      "name": "prob_blocks",
      "schema": "solves",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "prob_book_id": {
          "name": "prob_book_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "order": {
          "name": "order",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "question": {
          "name": "question",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "answer": {
          "name": "answer",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "prob_blocks_prob_book_id_prob_books_id_fk": {
          "name": "prob_blocks_prob_book_id_prob_books_id_fk",
          "tableFrom": "prob_blocks",
          "tableTo": "prob_books",
          "schemaTo": "solves",
          "columnsFrom": [
            "prob_book_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "solves.prob_book_submits": {
      "name": "prob_book_submits",
      "schema": "solves",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "prob_book_id": {
          "name": "prob_book_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "start_time": {
          "name": "start_time",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "end_time": {
          "name": "end_time",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "score": {
          "name": "score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "prob_book_submits_prob_book_id_prob_books_id_fk": {
          "name": "prob_book_submits_prob_book_id_prob_books_id_fk",
          "tableFrom": "prob_book_submits",
          "tableTo": "prob_books",
          "schemaTo": "solves",
          "columnsFrom": [
            "prob_book_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "prob_book_submits_owner_id_user_id_fk": {
          "name": "prob_book_submits_owner_id_user_id_fk",
          "tableFrom": "prob_book_submits",
          "tableTo": "user",
          "schemaTo": "auth",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "solves.prob_book_tags": {
      "name": "prob_book_tags",
      "schema": "solves",
      "columns": {
        "prob_book_id": {
          "name": "prob_book_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tag_id": {
          "name": "tag_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "prob_book_tags_prob_book_id_prob_books_id_fk": {
          "name": "prob_book_tags_prob_book_id_prob_books_id_fk",
          "tableFrom": "prob_book_tags",
          "tableTo": "prob_books",
          "schemaTo": "solves",
          "columnsFrom": [
            "prob_book_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "prob_book_tags_tag_id_tags_id_fk": {
          "name": "prob_book_tags_tag_id_tags_id_fk",
          "tableFrom": "prob_book_tags",
          "tableTo": "tags",
          "schemaTo": "solves",
          "columnsFrom": [
            "tag_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "prob_book_tags_prob_book_id_tag_id_pk": {
          "name": "prob_book_tags_prob_book_id_tag_id_pk",
          "columns": [
            "prob_book_id",
            "tag_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "solves.prob_books": {
      "name": "prob_books",
      "schema": "solves",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "varchar(150)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "thumbnail": {
          "name": "thumbnail",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "prob_books_owner_id_user_id_fk": {
          "name": "prob_books_owner_id_user_id_fk",
          "tableFrom": "prob_books",
          "tableTo": "user",
          "schemaTo": "auth",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "solves.tags": {
      "name": "tags",
      "schema": "solves",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "tags_name_unique": {
          "name": "tags_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.invoice_status": {
      "name": "invoice_status",
      "schema": "public",
      "values": [
        "pending",
        "paid",
        "failed"
      ]
    },
    "public.credit_txn_kind": {
      "name": "credit_txn_kind",
      "schema": "public",
      "values": [
        "purchase",
        "grant",
        "debit",
        "refund",
        "adjustment"
      ]
    }
  },
  "schemas": {
    "solves": "solves"
  },
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}